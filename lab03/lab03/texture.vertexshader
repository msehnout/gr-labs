#version 330 core

// input vertex and UV coordinates, different for all executions of this shader
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;

// Output data ; will be interpolated for each fragment.
out vec2 UV;

// model view projection matrix 
uniform mat4 MVP;
//
uniform mat4 transformation;

void main()
{
    // assign vertex position
    gl_Position = MVP * transformation * vec4(vertexPosition_modelspace, 1.0);

    // UV of the vertex. No special space for this one.
    UV = vertexUV;
}
